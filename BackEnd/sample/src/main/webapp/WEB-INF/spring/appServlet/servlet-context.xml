<?xml version="1.0" encoding="UTF-8"?>
<!-- DispatcherServlet Context: 클라이언트로부터 들어오는 모든 요청을 받아 해당 요청을 처리하기 위해 적절한 컨트롤러(Controller)에 전달하는 중심적인 서블릿 -->
<beans:beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- Spring MVC의 @Controller 프로그래밍 모델을 활성화 -->
	<mvc:annotation-driven />
	
	<!-- 정적 자원(이미지, CSS, JavaScript 등)을 처리하기 위한 핸들러를 정의 -->
	<!-- <mvc:resources mapping="/resources/**" location="/resources/" /> -->
	<mvc:resources mapping="index.html" location="/resources/static/index.html" />
	<mvc:resources mapping="/static/**" location="/static/" />

	<!-- 파일 업로드를 처리하기 위한 StandardServletMultipartResolver 빈을 정의 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
		<!-- <beans:property name="multipartConfig" ref="multipartConfigElement" /> -->
	</beans:bean>
	<!-- multipartReolver 설정 -->
	<!-- <beans:bean id="multipartConfigElement" class="javax.servlet.MultipartConfigElement">
		최대 파일 크기: 10MB
		<beans:constructor-arg value="/tmp" />
		<beans:property name="maxFileSize" value="10485760" />
		최대 요청 크기: 10MB
		<beans:property name="maxRequestSize" value="10485760" />
	</beans:bean> -->

	<!-- Resolves: 동적 뷰 (JSP) -->
	<!-- <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		앞에 붙은 디렉토리 경로
		<beans:property name="prefix" value="/resources/static/" />
		뒤에 붙는 확장자 정보: 지금은 jsp파일로 적용
		<beans:property name="suffix" value=".html" />
	</beans:bean> -->

	<!-- 지정된 패키지 및 하위 패키지에서 @Controller, @Service, @Repository 등의 어노테이션이 붙은 클래스를 자동으로 스캔하여 빈으로 등록 -->
	<context:component-scan base-package="com.basic.controllers" />
	<context:component-scan base-package="com.basic.config" />

	<!-- 요청 처리 전/후에 실행되는 인터셉터를 정의 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 모든 요청 인터셉터 -->
			<mvc:mapping path="/**" />
			<!-- 예외할 페이지 -->
			<!-- <mvc:exclude-mapping path="/xxx" /> -->
			<!-- 인터셉터를 정의 -->
			<beans:bean class="com.basic.commons.interceptor.AuthCheckInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
</beans:beans>